<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />

    <style>
        .link {
            fill: none;
            stroke: #666;
            stroke-width: 1px;
        }

        #licensing {
            fill: green;
        }

        .link.licensing {
            stroke: green;
        }

        .link.resolved {
            stroke-dasharray: 0,2 1;
        }

        circle {
            fill: #ccc;
            stroke: #333;
            stroke-width: 1.5px;
        }

        text {
            font: 10px sans-serif;
            pointer-events: none;
            text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
        }

        path:hover {
            stroke: red;
        }

        circle:hover {
            stroke: red;
        }
    </style>

</head>

<body>
    <h2>Index</h2>

    Página de exemplo, conteúdo para compressão.
    <h2>Este <em>Response</em> <b>foi</b> comprimido.</h2>


    <div class="chart">
    </div>

    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script>

        var links =
			[
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.2", "linkName": "" },
				{ "source": "192.168.0.3", "type": "suit", "target": "192.168.0.4", "linkName": "" },
				{ "source": "192.168.0.5", "type": "suit", "target": "192.168.0.8", "linkName": "" },
				{ "source": "192.168.0.7", "type": "suit", "target": "192.168.0.10", "linkName": "" },
				{ "source": "192.168.0.9", "type": "suit", "target": "192.168.0.12", "linkName": "" },
				{ "source": "192.168.0.11", "type": "suit", "target": "192.168.0.14", "linkName": "" },
				{ "source": "192.168.0.13", "type": "suit", "target": "192.168.0.16", "linkName": "" },
				{ "source": "192.168.0.15", "type": "suit", "target": "192.168.0.18", "linkName": "" },
				{ "source": "192.168.0.17", "type": "suit", "target": "192.168.0.20", "linkName": "" },
				{ "source": "192.168.0.19", "type": "suit", "target": "192.168.0.22", "linkName": "" },
				{ "source": "192.168.0.21", "type": "suit", "target": "192.168.0.24", "linkName": "" },
				{ "source": "192.168.0.23", "type": "suit", "target": "192.168.0.26", "linkName": "" },
				{ "source": "192.168.0.25", "type": "suit", "target": "192.168.0.28", "linkName": "" },
				{ "source": "192.168.0.27", "type": "suit", "target": "192.168.0.30", "linkName": "" },
				{ "source": "192.168.0.29", "type": "suit", "target": "192.168.0.32", "linkName": "" },
				{ "source": "192.168.0.2", "type": "suit", "target": "192.168.0.1", "linkName": "" },
				{ "source": "192.168.0.4", "type": "suit", "target": "192.168.0.3", "linkName": "" },
				{ "source": "192.168.0.8", "type": "suit", "target": "192.168.0.5", "linkName": "" },
				{ "source": "192.168.0.10", "type": "suit", "target": "192.168.0.7", "linkName": "" },
				{ "source": "192.168.0.12", "type": "suit", "target": "192.168.0.9", "linkName": "" },
				{ "source": "192.168.0.14", "type": "suit", "target": "192.168.0.11", "linkName": "" },
				{ "source": "192.168.0.16", "type": "suit", "target": "192.168.0.13", "linkName": "" },
				{ "source": "192.168.0.18", "type": "suit", "target": "192.168.0.15", "linkName": "" },
				{ "source": "192.168.0.20", "type": "suit", "target": "192.168.0.17", "linkName": "" },
				{ "source": "192.168.0.22", "type": "suit", "target": "192.168.0.19", "linkName": "" },
				{ "source": "192.168.0.24", "type": "suit", "target": "192.168.0.21", "linkName": "" },
				{ "source": "192.168.0.26", "type": "suit", "target": "192.168.0.23", "linkName": "" },
				{ "source": "192.168.0.28", "type": "suit", "target": "192.168.0.25", "linkName": "" },
				{ "source": "192.168.0.30", "type": "suit", "target": "192.168.0.27", "linkName": "" },
				{ "source": "192.168.0.32", "type": "suit", "target": "192.168.0.29", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.4", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.8", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.10", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.12", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.14", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.16", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.18", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.20", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.22", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.24", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.26", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.28", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.30", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.32", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.1", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.3", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.5", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.7", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.9", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.11", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.13", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.15", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.17", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.19", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.21", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.23", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.25", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.27", "linkName": "" },
				{ "source": "192.168.0.1", "type": "suit", "target": "192.168.0.29", "linkName": "" },
			],
			width = 1000,
			height = 500;

        var nodes = {};
        var linksDistinct = {};

        // Links distinct
        links.forEach(function (link) {
            linksDistinct[link.source + link.target + link.type + link.linkName] = link;
        });

        // Compute the distinct nodes from the links.		
        links = [];
        var link;
        for (var key in linksDistinct) {
            link = linksDistinct[key];
            link.source = nodes[link.source] || (nodes[link.source] = { name: link.source });
            link.target = nodes[link.target] || (nodes[link.target] = { name: link.target });
            links.push(link);
        }

        var force = d3.layout.force()
			.nodes(d3.values(nodes))
			.links(links)
			.size([width, height])
			.linkDistance(60)
			.charge(-300)
			.on("tick", tick)
			.start();

        var svg = d3.select("body").append("svg")
			.attr("width", width)
			.attr("height", height);

        // Per-type markers, as they don't inherit styles.
        svg.append("defs").selectAll("marker")
			.data(["suit", "licensing", "resolved"])
		  .enter().append("marker")
			.attr("id", function (d) { return d; })
			.attr("viewBox", "0 -5 10 10")
			.attr("refX", 15)
			.attr("refY", -1.5)
			.attr("markerWidth", 6)
			.attr("markerHeight", 6)
			.attr("orient", "auto")
		  .append("path")
			.attr("d", "M0,-5L10,0L0,5");

        var path = svg.append("g").selectAll("path")
			.data(force.links())
		  .enter().append("path")
			.attr("class", function (d) { return "link " + d.type; })
			.attr("marker-end", function (d) { return "url(#" + d.type + ")"; });

        var circle = svg.append("g").selectAll("circle")
			.data(force.nodes())
		  .enter().append("circle")
			.attr("r", 6)
			.call(force.drag);

        var text = svg.append("g").selectAll("text")
			.data(force.nodes())
		  .enter().append("text")
			.attr("x", 8)
			.attr("y", ".31em")
			.text(function (d) { return d.name; });

        // Use elliptical arc path segments to doubly-encode directionality.
        function tick() {
            path.attr("d", linkArc);
            circle.attr("transform", transform);
            text.attr("transform", transform);
        }

        function linkArc(d) {
            var dx = d.target.x - d.source.x,
                dy = d.target.y - d.source.y,
                dr = Math.sqrt(dx * dx + dy * dy);
            return "M" + d.source.x + "," + d.source.y + "A" + dr + "," + dr + " 0 0,1 " + d.target.x + "," + d.target.y;
        }

        function transform(d) {
            return "translate(" + d.x + "," + d.y + ")";
        }


    </script>
</body>
</html>
